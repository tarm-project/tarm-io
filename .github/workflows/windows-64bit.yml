#----------------------------------------------------------------------------------------------
#  Copyright (c) 2020 - present Alexander Voitenko
#  Licensed under the MIT License. See License.txt in the project root for license information.
#----------------------------------------------------------------------------------------------

name: Windows-64bit

on:
  push:
    branches:
      - master
      - dev
      - feature-loop-allocation

jobs:
  MSVC:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'windows-2016'
          - 'windows-2019'
        config:
          - 'Debug'
          #- 'Release'

    steps:
    - uses: actions/checkout@v2
    - name: minimal build (no dependencies)
      run: |
        mkdir minimal_build
        cd minimal_build
        cmake -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x64 `
              -DCMAKE_GENERATOR_PLATFORM=x64 `
              ..
        cmake --build . --config ${{ matrix.config }}
    - name: minimal lib install, build and run examples
      run: |
        cd minimal_build
        cmake --install . --config ${{ matrix.config }} --prefix $env:GITHUB_WORKSPACE\tarm-io_minimal_install
        cd ..\examples
        mkdir minimal_build
        cd minimal_build
        cmake -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x64 `
              -DCMAKE_GENERATOR_PLATFORM=x64 `
              -DCMAKE_PREFIX_PATH="$env:GITHUB_WORKSPACE\tarm-io_minimal_install" `
              ..
        cmake --build . --config ${{ matrix.config }}
        .\hello_event_loop\${{ matrix.config }}\hello_event_loop.exe
    - name: install OpenSSL
      run: |
        choco install openssl
        Get-Command openssl.exe
    - name: install Boost
      run: |
        if ("${{ matrix.os }}" -eq "windows-2016") { `
          choco install boost-msvc-14.1              `
        } else {                                     `
          choco install boost-msvc-14.2              `
        }
    - name: build
      run: |
        mkdir build
        cd build
        cmake -DTARM_IO_BUILD_TESTS=TRUE `
              -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x64 `
              -DCMAKE_GENERATOR_PLATFORM=x64 `
              -DBOOST_ROOT="$env:BOOST_ROOT_1_72_0" `
              -DBoost_USE_MULTITHREADED=ON `
              -DBoost_USE_STATIC_RUNTIME=OFF `
              -DGTEST_ROOT="$env:GITHUB_WORKSPACE/gtest_install" `
              -DOPENSSL_ROOT_DIR="C:\Program Files\OpenSSL-Win64\" `
              ..
        cmake --build . --config ${{ matrix.config }}
    - name: run tests
      run: |
        cd build
        ls .\tests\${{ matrix.config }}
        .\tests\${{ matrix.config }}\tests.exe
    - name: lib install, build and run examples
      run: |
        cd build
        cmake --install . --config ${{ matrix.config }} --prefix $env:GITHUB_WORKSPACE\tarm-io_install
        cd ..\examples
        mkdir build
        cd build
        cmake -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x64 `
              -DCMAKE_GENERATOR_PLATFORM=x64 `
              -Dtarm-io_DIR="$env:GITHUB_WORKSPACE\tarm-io_install\lib\cmake\tarm-io" `
              ..
        cmake --build . --config ${{ matrix.config }}
        .\hello_event_loop\${{ matrix.config }}\hello_event_loop.exe
