#----------------------------------------------------------------------------------------------
#  Copyright (c) 2020 - present Alexander Voitenko
#  Licensed under the MIT License. See License.txt in the project root for license information.
#----------------------------------------------------------------------------------------------

name: Mac

on:
  push:
    branches:
      - master
      - dev
      - feature-loop-allocation

jobs:
  All:
    runs-on: macos-latest
    strategy:
      matrix:
        config:
          #- 'Debug'
          - 'Release'

    steps:
    - uses: actions/checkout@v2
    - name: define CMake generator
      run: | # Workaround for inability to pass environment variables between workflow steps
        echo "$(sysctl hw.physicalcpu | sed 's/hw.physicalcpu: //')" > TARM_IO_CPU_COUNT
    - name: install gtest
      run: |
        TARM_IO_CPU_COUNT=$(cat TARM_IO_CPU_COUNT)
        pushd /tmp
        curl -LO https://github.com/google/googletest/archive/release-1.10.0.tar.gz
        tar -xf release-*
        cd googletest-release-*
        mkdir build
        cd build/
        cmake -DBUILD_SHARED_LIBS=ON ..
        make -j ${TARM_IO_CPU_COUNT}
        make install
        popd
    - name: install boost
      run: |
        brew install boost
    - name: build with Make (bundled GTest)
      run: |
        TARM_IO_CPU_COUNT=$(cat TARM_IO_CPU_COUNT)
        mkdir -p build_make
        cd build_make
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
              -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl \
              -DTARM_IO_BUILD_TESTS=TRUE \
              ..
        make -j ${TARM_IO_CPU_COUNT}
    - name: build with Xcode (external GTest)
      run: |
        cmake --version
        TARM_IO_CPU_COUNT=$(cat TARM_IO_CPU_COUNT)
        mkdir -p build_xcode
        cd build_xcode
        cmake -G Xcode \
              -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl \
              -DTARM_IO_BUILD_TESTS=TRUE \
              -DTARM_IO_USE_EXTERNAL_GTEST=TRUE \
              ..
        cmake --build . --config ${{ matrix.config }} -j ${TARM_IO_CPU_COUNT}
    - name: run tests
      run: |
        ulimit -a
        cd build_make
        ./tests/tests --gtest_filter=*:-Timer*
        #make RunTests
